{"role":"user","content":"how can i get the ssl context from a boost::beast ssl stream","ts":1738216323.869}
{"role":"assistant","content":"You can get the SSL context from a `boost::beast::ssl_stream` by calling the `native_handle()` method on the stream's SSL object, and then using the OpenSSL API to get the SSL context.\n\nHere's an example:\n\n```cpp\n#include <boost/beast/core.hpp>\n#include <boost/beast/ssl.hpp>\n#include <boost/asio.hpp>\n#include <openssl/ssl.h>\n\n// ...\n\nboost::beast::ssl_stream<boost::beast::tcp_stream> stream;\n\n// ...\n\nSSL* ssl = stream.native_handle();\nSSL_CTX* ssl_context = SSL_get_SSL_CTX(ssl);\n\n// Use the ssl_context as needed\n```\n\nNote that `SSL_get_SSL_CTX()` is an OpenSSL function that returns the SSL context associated with the given SSL object.\n\nAlternatively, if you have access to the `boost::beast::ssl::context` object that was used to construct the `ssl_stream`, you can get the SSL context directly from that object:\n\n```cpp\nboost::beast::ssl::context ctx;\n\n// ...\n\nSSL_CTX* ssl_context = ctx.native_handle();\n```\n\nIn this case, `native_handle()` returns the underlying OpenSSL SSL context.","ts":1738216332.466}
